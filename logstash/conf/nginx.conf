input {
    pipeline { address => nginx }
}
filter {
    if [message] =~ "^{.*}$" { # nginx access log in json format
        json {
            source => [message]
        }
        date {
            match => ["time", "dd/MMM/YYYY:HH:mm:ss Z"]
            target => "@timestamp"
            remove_field => "time"
        }
        useragent {
            source => [user_agent]
            target => "user_agent"
        }
        mutate {
            add_field => { "type" => "nginx_access" }
        }
    } else { # nginx error log and output from container startup
        grok {
            match => { "message" => "^(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:log_level}\] %{POSINT:pid}#%{NUMBER:threadid}\: \*%{NUMBER:connectionid} %{DATA:errormessage}, client: %{IP:client}, server: %{DATA:server}, request: \"(?<httprequest>%{WORD:httpcommand} %{UNIXPATH:httppath} HTTP/(?<httpversion>[0-9.]*))\", upstream: \"%{DATA:upstream}\", host: \"%{DATA:host}\"$" }
        }
        if "_grokparsefailure" in [tags] {
            mutate {
                add_field => { "type" => "nginx_parse_error" }
            }
        } else {
            mutate {
                add_field => { "type" => "nginx_error" }
            }
        }
    }
}
output {
    elasticsearch {
        hosts => [ "${ELK_ES_HOST}" ]
        index => "%{[type]}-%{+YYYY.MM.dd}"
    }
}