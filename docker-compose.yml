version: '3'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker-1:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-1
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "39092:39092"
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE_DOCKER:PLAINTEXT,ON_HOST:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INSIDE_DOCKER://broker-1:9092,ON_HOST://localhost:39092,INTERNAL://broker-1:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  broker-2:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-2
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "39093:39093"
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE_DOCKER:PLAINTEXT,ON_HOST:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INSIDE_DOCKER://broker-2:9093,ON_HOST://localhost:39093,INTERNAL://broker-2:29093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  broker-3:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-3
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "39094:39094"
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE_DOCKER:PLAINTEXT,ON_HOST:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INSIDE_DOCKER://broker-3:9094,ON_HOST://localhost:39094,INTERNAL://broker-3:29094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  etl_kafka:
    build:
      context: ./etl
      dockerfile: ./docker/Dockerfile
    volumes:
      - ./etl/src/:/opt/app/
    env_file:
      - .env
    depends_on:
      - broker-1

  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    hostname: zookeeper

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./etl/data/node1:/etc/clickhouse-server
      - ./etl/clickhouse_db/init_one.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./etl/data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./etl/data/node3:/etc/clickhouse-server
      - ./etl/clickhouse_db/init_two.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./etl/data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper
